"use strict";exports.id=7644,exports.ids=[7644],exports.modules={57644:(e,s,t)=>{t.r(s),t.d(s,{POST:()=>POST});var a=t(99413),n=t(73502),r=t(75727);async function POST(e){try{await (0,n.q)();let{email:s}=await e.json(),t=await r.Z.findOne({email:s});if(null==t.password)return a.Z.json({message:"Password is null"},{status:201});return a.Z.json({message:"Password is not null"},{status:500})}catch(e){return a.Z.json({message:"An error occured while updating user password."},{status:500})}}},73502:(e,s,t)=>{t.d(s,{q:()=>connectMongoDB});var a=t(11185),n=t.n(a);let connectMongoDB=async()=>{try{await n().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},75727:(e,s,t)=>{t.d(s,{Z:()=>l});var a=t(11185),n=t.n(a);let r=new a.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:Number,default:null}},{timestamps:!0}),o=a.models.User||n().model("User",r),l=o}};