"use strict";exports.id=9361,exports.ids=[9361,6530],exports.modules={6530:(e,t,a)=>{function getDefaultUsername(e){return e.split("@")[0]}a.r(t),a.d(t,{default:()=>getDefaultUsername})},99361:(e,t,a)=>{a.r(t),a.d(t,{POST:()=>POST});var r=a(95798),s=a(24837),n=a(87812),o=a(62421),u=a.n(o),l=a(6530);async function POST(e){try{let{email:t,pw1:a}=await e.json(),o=(0,l.default)(t),i=await u().hash(a,10);return await (0,s.q)(),await n.Z.create({email:t,username:o,password:i}),r.Z.json({message:"New user registered"},{status:201})}catch(e){return r.Z.json({message:"An error occured while registering a new user."},{status:500})}}},24837:(e,t,a)=>{a.d(t,{q:()=>connectMongoDB});var r=a(11185),s=a.n(r);let connectMongoDB=async()=>{try{await s().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},87812:(e,t,a)=>{a.d(t,{Z:()=>u});var r=a(11185),s=a.n(r);let n=new r.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:Number,default:null}},{timestamps:!0}),o=r.models.User||s().model("User",n),u=o}};