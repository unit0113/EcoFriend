"use strict";exports.id=9371,exports.ids=[9371],exports.modules={89371:(e,t,s)=>{s.r(t),s.d(t,{DELETE:()=>DELETE});var a=s(95798),n=s(24837),r=s(87812);async function DELETE(e){try{await (0,n.q)();let{email:t}=await e.json(),s=await r.Z.findOne({email:t}).select("_id");return await r.Z.deleteOne(s),a.Z.json({message:"User deleted"},{status:201})}catch(e){return a.Z.json({message:"An error occured while deleting the user."},{status:500})}}},24837:(e,t,s)=>{s.d(t,{q:()=>connectMongoDB});var a=s(11185),n=s.n(a);let connectMongoDB=async()=>{try{await n().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},87812:(e,t,s)=>{s.d(t,{Z:()=>l});var a=s(11185),n=s.n(a);let r=new a.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:Number,default:null}},{timestamps:!0}),o=a.models.User||n().model("User",r),l=o}};