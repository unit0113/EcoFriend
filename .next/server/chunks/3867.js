"use strict";exports.id=3867,exports.ids=[3867],exports.modules={3867:(e,s,t)=>{t.r(s),t.d(s,{POST:()=>POST});var r=t(99413),a=t(73502),n=t(75727),o=t(68460),u=t.n(o);async function POST(e){try{await (0,a.q)();let{email:s,oldPW:t}=await e.json(),o=await n.Z.findOne({email:s});if(!o)return r.Z.json({message:"An error occured while updating user password."},{status:500});let d=await u().compare(t,o.password);if(!d)return r.Z.json({message:"An error occured while updating user password."},{status:500});return r.Z.json({message:"Password updated"},{status:201})}catch(e){return r.Z.json({message:"An error occured while updating user password."},{status:500})}}},73502:(e,s,t)=>{t.d(s,{q:()=>connectMongoDB});var r=t(11185),a=t.n(r);let connectMongoDB=async()=>{try{await a().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},75727:(e,s,t)=>{t.d(s,{Z:()=>u});var r=t(11185),a=t.n(r);let n=new r.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:Number,default:null}},{timestamps:!0}),o=r.models.User||a().model("User",n),u=o}};