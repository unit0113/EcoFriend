"use strict";exports.id=9891,exports.ids=[9891],exports.modules={39891:(e,s,t)=>{t.r(s),t.d(s,{POST:()=>POST});var r=t(95798),a=t(24837),n=t(87812),o=t(62421),d=t.n(o);async function POST(e){try{await (0,a.q)();let{email:s,oldPW:t}=await e.json(),o=await n.Z.findOne({email:s});if(!o)return r.Z.json({message:"An error occured while updating user password."},{status:500});let u=await d().compare(t,o.password);if(!u)return r.Z.json({message:"An error occured while updating user password."},{status:500});return r.Z.json({message:"Password updated"},{status:201})}catch(e){return r.Z.json({message:"An error occured while updating user password."},{status:500})}}},24837:(e,s,t)=>{t.d(s,{q:()=>connectMongoDB});var r=t(11185),a=t.n(r);let connectMongoDB=async()=>{try{await a().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},87812:(e,s,t)=>{t.d(s,{Z:()=>d});var r=t(11185),a=t.n(r);let n=new r.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:r.Schema.Types.ObjectId,ref:"Team"}},{timestamps:!0}),o=r.models.User||a().model("User",n),d=o}};