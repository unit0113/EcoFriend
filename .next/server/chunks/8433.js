"use strict";exports.id=8433,exports.ids=[8433,8561],exports.modules={48561:(e,t,r)=>{function getDefaultUsername(e){return e.split("@")[0]}r.r(t),r.d(t,{default:()=>getDefaultUsername})},88433:(e,t,r)=>{r.r(t),r.d(t,{POST:()=>POST});var a=r(73502),s=r(75727),n=r(99413),o=r(48561);async function POST(e){try{await (0,a.q)();let{email:t}=await e.json(),r=(0,o.default)(t);return await s.Z.create({email:t,username:r}),n.Z.json({messsage:"User Registered"},{status:201})}catch(e){return n.Z.json({message:"An error occurred while registering a new user."},{status:500})}}},73502:(e,t,r)=>{r.d(t,{q:()=>connectMongoDB});var a=r(11185),s=r.n(a);let connectMongoDB=async()=>{try{await s().connect(process.env.MONGODB_URI),console.log("Database connection established")}catch(e){console.log("Unable to connect to database: ",e)}}},75727:(e,t,r)=>{r.d(t,{Z:()=>l});var a=r(11185),s=r.n(a);let n=new a.Schema({email:{type:String,required:!0,unique:!0},username:{type:String,required:!0},password:{type:String,default:null},level:{type:Number,default:1},awards:{type:Array,default:["OG User: first 100 users"]},team_id:{type:Number,default:null}},{timestamps:!0}),o=a.models.User||s().model("User",n),l=o}};